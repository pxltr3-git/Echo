---
const navLinks = [
    { name: "Start", href: "/" },
    { name: "Profile", href: "/profile" },
    { name: "Capabilities", href: "/capabilities" },
    { name: "Creations", href: "/creations" },
    { name: "Connect", href: "/connect" },
    { name: "Log", href: "/log" },
    { name: "Credentials", href: "/credentials" },
    { name: "FAQ", href: "/faq" },
];
---

<header class="fixed top-0 left-0 w-full bg-bg z-50 shadow-md">
    <div class="container mx-auto flex justify-between items-center p-4">
        <a href="/" class="text-xl font-bold text-primary">Echo</a>
        <button id="nav-toggle" aria-expanded="false" class="lg:hidden text-text focus:outline-none">
            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path></svg>
        </button>
        <nav class="hidden lg:flex space-x-4 nav-links">
            {navLinks.map(link => (
                <a href={link.href} class="text-text hover:text-primary transition-colors duration-200">{link.name}</a>
            ))}
        </nav>
    </div>
</header>

<div id="nav-drawer-container" class="fixed inset-0 bg-bg z-50 transform -translate-x-full transition-transform duration-300 ease-in-out lg:hidden">
    <div class="flex justify-end p-4">
        <button class="nav-close text-text focus:outline-none">
            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path></svg>
        </button>
    </div>
    <nav class="flex flex-col items-center space-y-8 mt-10 nav-links">
        {navLinks.map(link => (
            <a href={link.href} class="text-text text-2xl hover:text-primary transition-colors duration-200">{link.name}</a>
        ))}
    </nav>
</div>

<script is:inline>
    document.addEventListener('DOMContentLoaded', function() {
        const navToggle = document.getElementById('nav-toggle');
        const navDrawer = document.getElementById('nav-drawer-container');
        const navClose = document.querySelector('.nav-close');
        const body = document.body;

        function toggleMobileNav() {
            const isOpen = navDrawer.classList.contains('is-open');
            navDrawer.classList.toggle('is-open', !isOpen);
            navToggle.setAttribute('aria-expanded', !isOpen);
            body.classList.toggle('no-scroll', !isOpen);
        }

        if (navToggle && navDrawer) {
            navToggle.addEventListener('click', toggleMobileNav);
            navClose.addEventListener('click', toggleMobileNav);
        }

        const navLinks = document.querySelectorAll('.nav-links a');
        navLinks.forEach(link => {
            link.addEventListener('click', (event) => {
                if (link.classList.contains('nav-dropdown-toggle')) return; // Keep dropdowns open
                if (navDrawer.classList.contains('is-open')) {
                    toggleMobileNav(); // Close drawer on link click
                }
            });
        });

        // Nav Link Active State
        const currentPath = window.location.pathname;
        navLinks.forEach(link => {
            if (link.getAttribute('href') === currentPath) {
                link.classList.add('current-page');
            }
        });
    });
</script>

<style>
    /* Basic styling for the nav drawer */
    #nav-drawer-container.is-open {
        transform: translateX(0);
    }
    body.no-scroll {
        overflow: hidden;
    }
    .current-page {
        font-weight: bold;
        color: var(--color-primary); /* Assuming you have a primary color variable */
    }
</style>
